/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinesManagementSystem;

import java.beans.PropertyVetoException;
import java.sql.*;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author raham
 */
public class JourneyDetails extends javax.swing.JInternalFrame  {

    Connection connection;
    PreparedStatement preparedStatementCombo, preparedStatement;
    ResultSet resultSetCombo, resultSet;
    /**
     * Creates new form JourneyDetails
     */
    public JourneyDetails() {
        connection = DatabaseConnection.Connect();
       
        initComponents();
        FillCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        departureComboBox = new javax.swing.JComboBox<>();
        destinationComboBox = new javax.swing.JComboBox<>();
        departureLabel = new javax.swing.JLabel();
        destinationLabel = new javax.swing.JLabel();
        showButton = new javax.swing.JButton();
        journeyDetailsScrollPane = new javax.swing.JScrollPane();
        journeyDetailsTable = new javax.swing.JTable();
        titleLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Journey Details");
        setName("journeyDetailsFrame"); // NOI18N

        departureComboBox.setRequestFocusEnabled(false);
        departureComboBox.setVerifyInputWhenFocusTarget(false);

        departureLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departureLabel.setText("Departure");

        destinationLabel.setText("Destination");

        showButton.setText("Show");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });

        journeyDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PNR No", "Ticket ID", "Flight Code", "Journey Date", "Journey Time", "Departure", "Destination"
            }
        ));
        journeyDetailsScrollPane.setViewportView(journeyDetailsTable);

        titleLabel.setFont(new java.awt.Font("Kalpurush", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Journey Details");

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(departureLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departureComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(destinationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(destinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(showButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(journeyDetailsScrollPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(titleLabel)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departureComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departureLabel)
                    .addComponent(destinationLabel)
                    .addComponent(showButton)
                    .addComponent(closeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(journeyDetailsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        JDesktopPane desktopPane = getDesktopPane();
        MainMenuHome mainMenuHome = new MainMenuHome();
        desktopPane.removeAll();
        try {
            desktopPane.add(mainMenuHome);
            mainMenuHome.setVisible(true);
            desktopPane.moveToFront(mainMenuHome);
            mainMenuHome.setSize(desktopPane.getWidth(),desktopPane.getHeight());
            mainMenuHome.setLocation(0,0);
        } catch (Exception e) {
        }
        
        try {
            mainMenuHome.setSelected(true);
        } catch (PropertyVetoException ex) {
            JOptionPane.showMessageDialog(null,"Following Error Found!!!\n"+ex,"Error!!!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_closeButtonActionPerformed

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        String departure =(String) departureComboBox.getSelectedItem().toString();
        String destination = (String) destinationComboBox.getSelectedItem().toString();
        try {
            String sql = "select pnr_no,ticket_id,f_code,jny_date,jny_time,src,dst from reservation where src = '"+departure+"' and dst = '"+destination+"'";
            preparedStatement = connection.prepareStatement(sql);
            resultSet = preparedStatement.executeQuery();
            
            if(resultSet.next()){
                journeyDetailsTable.setModel(DbUtils.resultSetToTableModel(
                        resultSet));
            }
            else{
                JOptionPane.showMessageDialog(null,
                        "No Flights between Departure and Destination","Warning!!!",JOptionPane.WARNING_MESSAGE);
            }
            
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, sQLException, "SQL Error!!!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_showButtonActionPerformed

    private void FillCombo(){
    try{
        String sqlCombo = "select * from flight";
        preparedStatementCombo = connection.prepareStatement(sqlCombo);
        resultSetCombo = preparedStatementCombo.executeQuery();
        while(resultSetCombo.next()){
            String src = resultSetCombo.getString("src");
            System.out.println(src);
            String dst = resultSetCombo.getString("dst");
            destinationComboBox.addItem(dst);
            departureComboBox.addItem(src);
        }
    }catch(SQLException sQLException){        
        JOptionPane.showMessageDialog(null, sQLException, "SQL Error!!!", JOptionPane.ERROR_MESSAGE);
    }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JComboBox<String> departureComboBox;
    private javax.swing.JLabel departureLabel;
    private javax.swing.JComboBox<String> destinationComboBox;
    private javax.swing.JLabel destinationLabel;
    private javax.swing.JScrollPane journeyDetailsScrollPane;
    private javax.swing.JTable journeyDetailsTable;
    private javax.swing.JButton showButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
